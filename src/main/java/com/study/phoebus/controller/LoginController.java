package com.study.phoebus.controller;import com.study.phoebus.config.shiro.JWTToken;import com.study.phoebus.entity.shiro.User;import com.study.phoebus.service.ILoginService;import com.study.phoebus.util.JWTUtil;import com.study.phoebus.util.MD5Util;import org.apache.shiro.SecurityUtils;import org.apache.shiro.subject.Subject;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;@RestController@RequestMappingpublic class LoginController {    @Autowired    private ILoginService loginService;////    //退出的时候是get请求，主要是用于退出//    @RequestMapping(value = "/login",method = RequestMethod.GET)//    public String login(){//        return "login";//    }    //post登录    @RequestMapping(value = "/login",method = RequestMethod.POST)    @ResponseBody    public String login(@RequestBody User user){        //添加用户认证信息        Subject subject = SecurityUtils.getSubject();        String token = JWTUtil.sign(user.getAccount(),MD5Util.md5(user.getPassword(),"1111"));        JWTToken jwtToken = new JWTToken(token);//        UsernamePasswordToken usernamePasswordToken = new UsernamePasswordToken(//                user.getAccount(),//                user.getPassword());        //进行验证，这里可以捕获异常，然后返回对应信息        String account = JWTUtil.getAccount(token);        System.out.println(account);        subject.login(jwtToken);        return "login";    }//    @RequestMapping(value = "/index")//    public String index(){//        return "index";//    }////    //登出//    @RequestMapping(value = "/logout")//    public String logout(){//        return "logout";//    }////    //错误页面展示//    @RequestMapping(value = "/error",method = RequestMethod.POST)//    public String error(){//        return "error ok!";//    }//    //数据初始化    @PostMapping(value = "/addUser")    @ResponseBody    public String addUser(@RequestBody User user){        String password = user.getPassword();        user.setPassword(MD5Util.md5(password,"1111"));//盐值最好配置出去        loginService.addUser(user);        return "addUser is ok! \n" + user;    }////    //角色初始化//    @RequestMapping(value = "/addRole")//    public String addRole(@RequestBody Role role){//        loginService.addRole(role);//        return "addRole is ok! \n" + role;//    }////    //注解的使用//    @RequiresRoles("admin")//    @RequiresPermissions("create")//    @RequestMapping(value = "/create")//    public String create(){//        return "Create success!";//    }}